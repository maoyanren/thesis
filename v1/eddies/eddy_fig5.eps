%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: eddy_fig5.dvi
%%CreationDate: Mon Apr  7 13:50:35 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 67 588 569 716
%%DocumentFonts: NimbusRomNo9L-Regu
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips eddy_fig5
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.04.07:1350
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5BEEAF327694DCBD37D0F25A4455
CA1483842C7EC50271156B4EF9FCABBAB77FC44F0A45292B2CB9C7874C114F57
A185C8563C2D5E37C2128C874FB154C50F3E6E2CA996865878EBEEEAE799E3F0
B9CEB22C9CF2337EAB4F702119EA2B28A2CC54B4C09D2633BE30E90ECFCE19F9
E8165A27B9001E6ADAAB863ABBCD2BE8B830208B9482EB668E707C52E55E9A4E
F17162822348ABED2AFCA2E758C58603B7CCC9E4C9C9CEE1C2543A0B3576F854
8980A7B213CC2602E7B133FD91691C91FEB76E96D4083A6185D3295645CBD141
7913FE8919DF0263DAC834577ACD7E67742EA956E85DB94B0F94E41C9EE94B2C
E2D3433AF6815B48351874AA23197A4B6177A0DEC633BC444468AE738011EF30
BF68A18BE9EB710C0C4158958CD6707E3DE6C99E7B22C9B86EBD507826AE3C49
3B467D4C182EDC43B7551405091A434A3A19CAC124561650FCC4B0F0FE41F2D8
847358A6856E3D6F3B11C1F343EA1AB3E596E20D63DA5312AE94EF917D9DB156
96E17035899FDB03EE0641A82F21FB94C2D83DB8D42A9E6C43BF0B5B58DF7D79
4E0557D90085D8AFC0EC6F43B313FD8B3F70D60A142980C851690AAEAF4A1EA9
649BB287AC03A02AD94BD1282D0003D149F5A121965CFC7B2CB60EAD24607F5C
5BAEAD71201EDC8950A211471C6735F2E4903C3D9E96E3E09612F99B100345D5
3EDC134D23DCAC11C9CC925E6B4450D61534122A2BAFE84F9E953A94B2BAF47B
290A01263D432868618263B265E238F5DC64BA853136039B860E4D93545F2D0B
99109EC2F485B5A85B7AEBD47B97E254311609CD137751CE86D4E2DB76077949
3281EE8CBA131374CD581E9B89686B7A0422580B42D2B27B8E85E65455814D5D
BD5EE1D3FB6D4EA9DAD431B6351CD49083ECE95261DAAC6086A59517A44FBB8C
26086186A053A4F0F75579ECE1936FEB3C46149D516BE13FF76CE012AB7F34EA
9F6DC33204C952B194E04005000072C1658B6FF324C0FA36617CA186D413D7FB
DE7A1DE16C177B128893D0DE2309C3452EFA11B131B70FD5D05D190CF071930D
475B10F5690FB31AFB3808A455B2D5EBF705993EA37E0CA259E8CE9CC17B9EEA
FF066BB99D11835C3A1BFE32AA1E5306A19979C332DB99C17A6E747DF03F72AC
81247E41F0CCA86C0A28DED6A482790976E4736CFB0F9AF5A1E173349FA81237
B6FAA904C7D7AE64BD7BF0F1F98B05E335BAED5FF413EDF25A885AA83D4449A1
5293BBBF5E9AA49635781F71944DC651CF22D9BE6B1B853E29539A0719C4BC7C
914CEDB6066B412F0FE8FA5DE3C26AE3AD05EB0BE336707CDBFDB3C6668F3552
58EFD368AA41728F9012B707F5B801D0AD1423D2CFF6FC703298F550FA314ACA
8595F80F4CE06800EBB56822516CE2A2AD590AE132F91E1E18C6A4CFAFE25167
3CDFF3EED771F7176073EF95A5D247A11BBEBAF39C4BA3E4C6BAB61F4A6D29D1
46DD24BFB42BB7DDD62CD3D8205C45488D0B1F7C9F35F565FF0CAF60320BFB71
A889E9D3E6301F8D9DAEDDE055A30DCB0AF7C988ABA588770638D3F10737BE8A
F5BF97FD1900593B9168B6CAC4E3CD2D3831B0C8BC5A8612269C343D6FBC7D5D
5D09AEC987234CF8E41132757808568998057B351C6FA997F1295DECE27656A6
906C8B5C66FD5D5AFBE2E98343CAC6756EB9DE80A7FB2D508FB6F7B9C99ABD14
229760B11060926A3A29E96FB9F5A800B4C96B22CE70A4DC0067FA56CBEF8CB4
B4DC5219EFD387CB647AE6504ECA7DD3756E1428B50AB2F33D65E7E7286732C8
3CD2D68EC6563CA73B0BF0D53BC5CC5DE889C15C8E1887C8317DDCF3E6A1999B
444C14629A22823CB41AD036956FDD15ADA416658F341EFDD439C03A1617B564
19668EAD90E43E382AA3BBE0CD0C2BA6A6778581AA72EC3A0092EDBBBCD464F0
19782C375A163F1596AD20F45944FC9D58D4869DB8F4586EEB746E6844353265
05652F8ED3E1A07479CAB21BC93B2109E15AA5AF51667E7EEC450B98D58E458E
3A8ACCFD08D36C71825AA47137DC71DDB000A203DB203C3191D644CA95E7A498
0D82E503891BABF5EB5BDA15507DDDD85DA4ECFFB9B9ECDF4A55D5E3A22AA212
BE036E98B256E2293299833229CB814E449D98B39F000F922BCE8C297E4E0ADA
AB69A49F4499066BCDDBD6A90DADFDC11833C93331350147C2A6074B263DFB6F
E58624564DABAC8AEF9BAD4E14D9CBAADF8EF93A933795C0CBFB7204DC67246B
662E6DFEAEFCD319C14ECC81D86640D779925329C1121A5493374B3357EF1E88
4D9AE0CA20D5927235A2E453F321F1FAECC837D00890473726B43BF80B94F9F8
A854E4C5A61DBF3CCB017E5E35F7560775441F9AA669A78FDC06810D5E546CD3
34D3DA9FE95DA5114F6AA2146D75497D79D160CBB55CF3BD4745624264A742ED
61651614384D7F83AAF7670F75CAEEC57EC1C1B8D5E3675786AD55546EA519E1
33DCF6788877A3104070C2A3C38417185EB411900FCE5928EA3DECC5CF896E13
3B001B2D429D90F2A70F3AA3EDF3505605DC40E7BF2FC2C4A95C05EDBE67A352
84F4110239048BE848174F658542BB3EB9D65D55BA30AC992C8DF8D676D38BD9
E9E35AC3900E6CE24FB93F8A39F853687C3AD733EAC66FA7C71897DA78823269
B1F0CD8C80E96A7C604A236B45F76EA744D07C3A800A7801D128285146E7A4AB
0A63C3F5FDD51E36B27B3E37C2DF3C107C9F6409AC5E3D2C058488C29EE301E4
EBB93998E1FAF95B38C30BA1D14568C0E4EB9B19C88A855DBBC9C8B2F8548CFF
BE68A2F64413230755ABDEB555EE5EA75D58063035687881157171BB52A02FD1
AF96F7586A2BB529B1D0A8EDC622EB8F3DB7E5E1E5A589718482D822AA4123A5
2FB46F67C372DFBAA905626B0E848FA52CE9260907781F15179074E816674649
DA4DDDC1C816FB2382B7912A7A199C89E60DA9FFEA395FEE17C6EBC630F9AC53
2ACE0C3C440DC034DAD9C19225E63F810E6A3000E8960E71B73E9003276E22FA
447D5D4C7454D57F3670A11457E550B1E5EB5E4E0687BABFA32B5B1598D198A1
A9B82D87A7814F5D6AE5ABDD6700D6A10203D03263B1C28B26EADB953ED292A0
69395248E914A6496CD9BE43DA79080CE4579CC908CBFE582D6EF3F61843769A
C6B8F921C3D23FD225E7AE3046EEB5DA8E4B3F9DAFCAC3C972D1772F7CC3B20A
1589EB02FD2035C6E016CE31998B6C40F4B704F7641BC260763F7DFAA9723223
CBAF554E4B2118CF56C276759FFFAD8592BE056026C8C6E8C30F069EFAC8828C
25C7DD37BF76FC64496E0433AB4F77F36775907B6375CBE0F615464F43C85A4E
FFD8613B50B2DF4540877F921261E007E21C5F07605BDBBFD5A9004DD35CEBC8
AD471B0B5CEF1E4EF64DD674D5FE923780209F53E18B12801FB2F6B808800D49
12C0617902E3F26A6CD650F39D268E6F189CE5CFDD4E31C0BDADDA4BE21E98D3
73420CE9AED8F452658255953C2A848F38DC541017A50F4AA667F6198575EE01
B1810049A28A4AF8400A5B34DB7AEC263EB02395B65361C498D0AF2F28A5CEBA
8A81682ECB126BCEBF046D6CAE00F280458AB3CC02002C45FAA4AF1410136471
12E761E4235722E6CD85C35C068CE9D210CF36B6EDE8ABE94C8BDDA908C412D1
709B76E1A11C58D57C95BEA86D6C602F27D4D17370D21F9FC2F75B2262D29D15
5FBE69CF4409047497982E145F0BAB2844ACD08BF7E780F58C3F646B4A877F4C
37822731D40F4BBBA3557362AD0A39F29E7E10E5CB7D4A1D8B7790DFD1FC31D5
878E3D6536EA9B9EA11DD440E7727EA3222207E864C7F39773638E3BD2FDDA14
6DCEEA19D0BDE898CF328861C3CB4423FD2C0C1AFC7BF2795EC4B6E52A7491F8
DE641E4DA4A575AEB7D0B1132800EECF73E62E6B46F76D950132B8B91CC23094
39FBDBF92515FD7870D55FCD937B60978AE0D5CA76F66FAB78AEA057C18ACF58
136C94A428B207C283B19EF1ABABB5EA4F9031F861445EB8E445EFDE8E009917
0FA3FDB5915208CA9D59E85A01FC3464C31225FEC9BD8E80C4653E80F243C746
9D4550235FD56FB8440254FFEB9BE81630C673E4105D8A28669E24F0761502B4
21C67E51AE6A41474DAD1C4D661EA30107B2945D04F40AB1913545C2F3B6C817
E0888E377EAC3E69EBE2F94FDF0EE12D7B7A3E84FC2F751D239F80588DE25AE5
248B3DA3CB40DE6CC6B33441A1EAF352C4AFAFC0DCF43FC2EDD4D391B08335E5
2876B7E5BAB410C52EFAE963533E96C933D1B3AE5C00C98B9D9E9AC35E839C7B
12788F0C3A50CB5356E2CB4DA34E80121E9D5E56E1FD39F1F17E1B12EBB4126D
98AAA47FDA675076CA58455557AF8D419001AE35BBF86ECB09354B460CF252CC
F9F57E6BDCC170824CA29486F56A04D76A8E3DEAD9ADB6D9AB48CFD1DC17812A
64A6B3EC09CB50B4B4BE2810AEFABB7A47C5F3D0C745262B026DC682C5FFB218
C7EAA991C4260450089DC548FBC1107E6E2DC1FED5EDE87684903DE9B832A4D7
063BC4D0D2CC09E75ACBCF91DF6E4C805E66A8DBC8B1F072A8A5320DCDC6FAAA
63165F3687B711DDBEABB44F58A37C852B9094430CC219AE9FA1B0099F0E95BB
43963EFCABC260EDD8680DC2D3FBB7B9E71EEBF7CDEC0F86725561A9AB7AF828
B3D75CD4A22840F87D0B389873902B7AF8926363863585BA9E3BDD67F4E63E67
B5A0D35D9B35A3FCD46FBCE67AEB8B094D99DDDD96F5CACDC2CF3ECA7F4966A6
F9ED8619B3728B373DF501FF4E31B69E896D989D28561577A91CC1839052EDA1
975F7290F095DA482A44ACEE6D87377A7F70F555DF45E883869A4478FEC897E4
F4620A7A8F2CF6EA77EC690C25AAB024108A1E5961B2BD1787A42C2E1D24DE21
21886300C63820943E7CD5D07A9411B6E88C18CFD9B234CF2F2D603D026AA1D2
6D2D81FB0531381F8800FC7ABC5436137CB6E78E71FA1975956C403D1DB5BDD2
DC150F2066AA14C56B25394D4D0A8F215E6A0DADD9075E4D95B3F43EC8B1FF6C
A041375A2F358180A3A207B2B331CD0C7DAEFF55E92B7762F9E45EDD96CC722A
E02F9564E06F0EE1520330EC6936141F6BE214776C7AB2623C5837494D583151
7FF93411F08B5F5A17C1E554F67E8941AAF7388F7B9FAE2D16C78DB978CA99B7
CD78F3DE7516C4AB3E90B348F1657F327D698A8A222DE58623B2B337AD7CB84C
D7CC7795A8F1E7197309DAD0349A9652F1B56DBB4892268FB19A5038B92846A3
11D5E9443EFDAE218EF1FCDAE565AA6B7DFF792E33459D996A2871A3576DAB4F
85D9E08E692A1205C9D68F1E9D5BA7BBC544B90EC609BE0B28114E5B0AA42BB0
F38F2251827A40DE2CAA3530549FE1ABE58BC629F1C17C94059FE68710B95B8F
E0405D523BD805ABB4BFD4B0B65AFFBD62E1EBC66C4D5F4DE48B695463808A3C
B8967A7634E73E17DBEFC44EAE3BAB0802F92903B9025D81B58B2212E4111C83
716F7699555C1EE9C30D4C9ED6C62E34FEC6C22641C5DF83BC4AAECFA55E7883
08758F0950BE6D9D4B1A16D4D3E08881A56B2DD3F25D5A9F620224A0A463B7BC
2C470BBF105BE1C3F70C7D6D2D4D97AF75553E5C2D06D80F724F1D233806F30D
13DC8B1A60616CB434CDE7436FBE5D62D5BE1287CC4D31BBC3C5C605452A1D95
22D16A6757485C5311EBF823F0CB12B9B888942681DFC2715F371A8D6A276B64
F780D2947F2AFF2E0FFF984F022FE12D3D40B1E01B9A023901C9671F77F34AE9
6981F34DDF1C2E123125535FD0A764A54500F48282016140F8F023272CD1DF9F
D32113D84CCBF5192FB25859B28218DFD2A2AB8EB5993FC73B5CFC616BB8BEF6
9866315100DF64FA3835C596EFB16C8297A3EC3BEFC104B913A522C3B27CA3FF
8E6DD1831EE6BEDAF7A5E6D0376CCF6B9A2786ECC67285E5DC96E456F14CF952
2FFD9EA865E7B124F886D8AC8881CED68C7E9ECF4FE4072192AF83BC9B72C3D7
C59B116FE6453231370C856ECFF2E3BA4B241E05E9F26BA9BA15AB2255B5AE91
9B08B0F887A8689139753E4016535B898476A96ACE6FCBDD69DFD45FBF9FC02E
63A621F9AE7C69941B89AAD145531D50E8BFF6D16E903D98E021BBDE717ED8CB
8FCF2992F44CA2FFED62A497108E154D152CDDC56AB0708D2D1F4C79F53578C2
080FF2D51D69DF2D62985ADA84B89645052CBA4B0C208655C9FF9D1DF3D68120
D518C02545DE3A3FC8143707F6EFC1E3D2CCDDEA738C3B3AE3AB18716D4F8E81
0D96E7AA41F0C1C464885A93125DD0E7D3B1BA502A46268AA21C93DD05404FCF
D48AB7F53361B96F60131DCBCD76FD88B3091E0B11267247A2853DEC91F611E6
CC9D524C433632AADE90B33DF901CB0D6264972445841689E8B80209D1347529
714C5C6182FC4CD1BAB40A0BCE44074C3B78058725777666DE7703EAC3383DC1
04219EA988482D22A585867F2B8469A5DFC4AAE701C1AD95DD54F805A9A18220
13C4B64C1B0CE160E91CFD87704C4B218F9B7C4941E0BFF87AEE0D09A156F4D6
FABD5AED2EB1AD1539C60CDDA9CC211B4964620646985B175A97010740C2C4F8
83DD55609CA6279375ABEA6D5DB00B69483794CE7DC70527A55D3AFBEE2B72D0
6DA8AD73D4DD656B5C08AEF3D9C0DF8EA30D2108622742B23A11E4EEE0C0AD43
200A1C58AEBA290B7BDC50E6F576CDC253CDA4C8B9EEBCF1FF7C1BBBAA5A7AED
E35A38965036913E1DC771BEC874D40288C05F2837093A19DF87A4A2E08A3B3E
08A8DC1EA2A8F1431C70EFB4593BB60DD6A270142045A28F7FF5957BEE792B44
2DAE3E5E651DE09EB8124E2D2FA94FE25C62F803037CE6E9ACA74DD371CBFDAF
B06B2A7FFBC00A9912B63DA88B3C465E434C7ADE8B559BC5276F42B859B9EB3A
C62F31F9A135E9C9F21A488251B50D50816A1C2963708DD3E8D4767F4A3E61B9
1F374BAF78C09E13E90690A80DF614F24E9D390EF7866AF280B988BAC8FD8031
4C4793506DB29701EEF70B28F7F5A1CB1B44B1BD592D452781343A7519F3EC1C
7389F3C9372E36F3B6F2FA7971BB79AF042C7E01414E0F1EE275B6ECD56F65C6
A64A1B8B6AE8BEDBA37400A3E4E1234BDB24C8B487C239B7B926D7899CAFD177
2D8117273225284517F79432A421CF947F4E2CEB674D0CE8FF1542F7A1ED2D36
9DE7A3DF55A42427E4FA070294B5158F3BF431BC67E10365E439DA992ACFD2BD
437656EE331F4E6D909679C35DE27F2042678B8DF6035AD59D5452C7D4C06970
BD6D1F890D10DF396A77C2211C05331F7A91B4F74898E27A140FB3D18BFA3BED
5D6350F7FD4B4BC9183389491F928313783167A9DA37A6685661D1EB5BEC69C1
DDB3367FD5F9F74B4C57434FCEEB0B0F3C917994921AE83116CA0E4E0ACAB8C9
D6E1B46B3EC3299AD96F49491E0FB11C28B68C795DC55981A2D1C98F64D713D8
2337622EB06C33E70336A6F0BBD09E7754F0086C51254AA1B3822CA92E9B9A0E
654D48C331BE1D10014340DFBED10AEFE88C7424CC28C83FF439DCE42E7B7873
29540F5C4C0AD7F47033FFA8D9B5EDB153042D44A0F21DFB619A70D85E79A7EF
A78299FD5DA55B7785BC80B4204E26A2501C8918DDF2C9A51C1B473E372A967C
8CA86C9C89D9B92E5907D576098471DD83E6B44824FB1A4E23545846FB700B09
300879A114B70CB4073D6CE990C326331F40C300A1CEA866503D32708C76C30B
BAAE0F953D5B8A11231E552F83EDA7E5D330B2639789228AB8DC8B253A1FA32A
930778302889C4BE460469FF24650E918FED191327A829CB40D1DAFA83D894B6
57908A112B91C0E426E3158DFF7FA6F55790E477C71A2F7CAA6DF3E02D22CDDC
8B2F838877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA14612257AB2DF361B2A
F95849F3AF9E42B66361134916CF409367406B8CE651196D0884211D48DFB521
FD1531B1176D06C17FCC1069527F86804DA275D8C6F885EA21BEFC584B86FD1D
4E42D1749C64E0D05FD323718C729736C4FD946D5C1F367453F55559F4090E5F
392825C68B2534511B47B3B6FDB110BF87F8ADA28B1791D94239622638563256
509346128EBAAF7D11ABA3DC2932E9D0E38BECF8F1B371CDCDC742A20A39AED2
E38EE1DB9B710161AA3AB9740C261AD4ED24E83D21202783DEF88E7D5E03227C
6FD20C6306693FE71BADAD8772C084D75DDA342F5FD46E03D22C944CF66F3B2B
762B3F94CF0C7669ED9E36D4C40DBFB9E20095EA445926BFCAC3915932A9CCD8
BAD56270B67822A5FF7C7389ABF6B5EB8AB4231B63432C3473DBA5C03B5BC640
7B0BD2282A2426B0BFEF433803FE7733AE9EDB3092D68B37634AE662E06B4ABA
1846F7E20848498C341054EB5F51B9FAB29AD78F46E9D4B83C93A222AD65F800
9D3DC78DA4729409A166796ABF2C0365B3C418382CF1CF23253BE609FD8F62E1
00C6674C10035F3A21E37B67AF24C33BA8E77C4BEBECB6C10A94290422DE91F4
A7F9F9489227CC57499E63BD2CB9AD4584CF8D41C065904BF50BD0AC2ADBF6B2
C6FEA867957296E9CB7803407D477324BB056302D629C5A6760A3B2E1744A677
6D3F735A7DD2B4045E98FFB02D8E94207DD4475611B45D1F1026A613D2488417
A29A339F99A0BE9FC33A702D808AAB91FD490DA4A4C708DDFD5842A0349D711E
EAFA2042E6B070A6A0FFA195BB4C89ECDA3A07157E9BEA93937C58C1343F917B
94BAFD749F78D8C87B5DEE8390E323339D9456E298E7762FCAC4EC5DFE7E64E1
40B1B6D434D089639078A296E2AEC33589A13F6DBEAFAF69B753BC0DA94017AD
3D1BCE74EBAC4EAF1F31FD2889F302A9C5496EDAFD87420BD8CCE9171FE3C815
17DB81CA5A9C55306AED6DC20E88DDC5B79E97D0F2752100481BBD994D8880B4
A972C02836F1FF6B6816C5B0312BB90A50F932A3247E4386A7C2342A2E8BE063
58E0BBD553D9454EA8BE0A8587039B9B50B78CEA0180CC698A7CD5FD23108486
A8D7E3507793B392EBDDD9C64292AE5E1BADBF96AD2D61D9FD8AF7C641BFEA03
F315BA14C80E80248819BCCFAA907DAB2217AEC0D0FD1D603AA8E1C41CE554D9
E6E1F6E73FE508B59BD30498E6B50AB8F74AA464E105EC8E2549679E31924D4E
1DFABB18F0A2F9914B3018E5CA4F3729124EDFEDFCAE0CBDD9C92E40AF04AE2B
004342D0B05283E667DAA2E208C2CC97FD4C3A32D46D6E60A406C10DEEF835F9
334C666E47A0B14492B04053DA8F128B3AA2C2469823FEE888CF2EF517900AF3
8B219AC851A0B579B7452DF2ECC9744C9CD0DB42E22B829D9F074953FFAC45FC
E6EDD4B4ED1204D0DD7B04BB8F8348C088F2C7641C103EC0F4873EF5543B692C
7E443F5BBA53B2C6F34650E529F2C762FCCF2B71058CCD9776BB2FA3E523B472
81C141BAB3C3761B63044F899A2BED95085C880B3451F77F9872FFEF1A8B9E55
42B59092FC7554D883AF19D4482D425228D7B6683B6B51CA15459A4602CFA5EA
E2D3112D43FF22C4723429BCD93783DE701498E8C8A4A3E8E2EDEB61B783E128
C91C8CE14EB9C994130A91A5941FF5A10EAA8A5FE2CD4FE65C243A3068FA9D4A
DB75BEA4DF343AD30344E6B4C7F83D7D382B0360A20360880286CF5A98C68FB3
334814C8AB220773B7AB13AFD20D5219A7156212A7B57DD9965B15A716723895
5795B8B5F0761CF5F602D773170B7EF67AC586E21B5C084E19F5F28704CCA9BC
6F5B8E11C7467DD20454B9E98555507F9422DFBAC2EA874D558B0F46BCEF22CE
4104BCD93691942E935C838E2CD3A397BE2BF9A15C4E9E5DCC2E4B1C631F005C
08F4251173001AC878EB994085E7065FB50E28631D2A286B9862B0C69172AE1C
C510CDBC979A265C946FA308B93653480A061AC95432AD81BB3381FFFC6801FC
793F24F175B4395881CCBD1700818B57560C08868F0F26B2DE3A8A834CA31512
7B9DA49A83B179D5C2D949F1CF7C719F34AD9E1029ECED3B626AEABB299ED351
CDCCFAAE7AB06AB2C5E0A1295DFA75CCDC7E43EB2D97A5FE2D5CAD90D225C391
D4D03093CF4C47AA18D16603922D018C9F840E48BC3875E58E1AAE5F83B9F648
EFD94BCE7500D2FB7626D20F1E8DFE66FE55885517906BD42626C327C4959B0A
E38A30968195F49E987E78CE68FCF052B0AC846FBF9406F5FEECC4503F5F61C4
41EF8FF251FD7CA7D57C0E5812273C5BA28348546A613CF46512D1DD2740ACAB
135D3ED829930EA2597D27E83548D60FA706336B7B74B5B61D0600985C009C4A
0773A63C5AA25C2AA76BB4ABD78E76F368B2F8931B3A564D776CB7D207F15278
52104C33B42746A3BACA60CF36851C06C4E692D619E737C40105573C3F045A05
AD4A2A6547BA07DCC85A023564DCE9C5FC54FED78704263A0CD784CD05812681
BF4F50D75BC0D13635B49C45ABC8C5C4694CC435C3A4ABFFEDE461D6AB0194E1
2FE23152321E25C85F32DC93E8E9DC24349F2961472863DCBE31C16A1E9E503A
1B4944EFDC9174360B7AF58EC2B94DD3F90D59E1C02AC72F5CBAA9FC9AD77BBA
2FDD4000CFA299A0C80E0D2727283C29E802A2F7DF832658EFC9E7AD80EFC406
006447C721A2652F09E20933D1022DCB56810C092005F55A6F4304D43191D93B
2172CD3FA12B841DFD845C150D10DE72460C6B31FD34971458826BB896F5659E
240A2F7C0B86560368F431F0033DB1D688FC855A678167D6E60ACC561905930F
6C54DCE24B7D52F060A928C90E7DA1ACBFE996056DBE6FACC518B4FB7EF368BD
5EFDE10422BB65C674167E286D7A1103E88FACD342B9BD77922878CDF0A50332
B3B784A5D7E2F9312071F7F834E1B69CCD0811185FA095D32C2ECDB0D24E83C9
4E69B38E54E1E8E9B5AAA5484B8A7BBDA28E12327337BE40DEA07AB561CB1283
43EC30F61981503FB81ED325100FB794A8F73A016F24D27C104A3779C434E1E5
983274027406B75AC2E9A72E9D5A1F76D2E9C53AD1565FFCC7C0F5075BE6BBEE
8C44DA6E8C7FAC3217053CE7867197487474B4FADDB6CD646A3212366CAC915E
C1D1A9EF920769DAA49600CC1CA0B219636E2614C049D20BBE72C2F9CFB7734F
12D40A278E1226B5184A10122CB4AD4DA632D2A2BE1FB42526086233770B74B9
AA48320F8643EE99692B423AB70A8749CCE844B254F97C6CD7FDC8C29C36F6F2
8079488ECC4FDE876540CB8A5EA26FEDE017D4D323E51AA15F3733F950472B81
CB80589FB7B9F8600A76C34590AC4CD2CD544EFBDC30CE5CEA4BFE4A3C10CFCA
DF599B97A370A5E5A7296CB20555F1C40C69C32A3351DBE674D217DED3683E83
4DD3D6E43C9ACD84419EC6D89CD4AC1CDA6A170D315926037DB22A468783C0BB
8718EF821EB65882AA9D32E6556A0A8363DE950DB1196BDA83008F0E210A7C55
EE28A735413124B31FED9FA7CB72F44474CB357380E8D3B20DEBBB60F6FEFBB3
D8734EE209DA8045089B6D5E1909ACBFEB348D1F600A375F6AE1BCA1D96DD5E4
676EB27B4798326BBA81D5E506C3401F543CD7A3C5A5F4212708C28AC1D8481B
EBEA306D9C2087E342143227975C1CD0EB52C414D50E6F65D6947B92A699ED71
DCD0997D30862A7C210606077F9048E0A8F714A3A63B5B4976CD1C9F6EB700DA
8C09D3E9A65C53D6F5551641298A073E0769A64C39F8929D7813AB5E279F44E6
BFD5A4DF15DE2659AFF58BE01AD851FAF503177C493A913CB78A80DD191919E0
2BDB39867950A79D675C70A0DB6BC7D12AE13BE095E8DC1513F1BB7F913F0D79
E9774DAE6A477BD134A8B18C6805D978BCFDDE9FEDF120E8D5465FB2B6108CAC
A549D5308F311E15FEDA97B4DA57D69D718B7AEC87748F55E4554CE6CEABC62F
70BF6C35393195982D7D43F470F00B72B8D3EC9DD3A3F55973E7F93219ACE7DA
672F9F0AA2735B966B45FE0A6C2077668365FD0CD62B6707A34E2EA4DD1CA17C
D9BE4A4972040CFFA0242A153A428395FF3102B915A354D1B984BC9F9F7F3FCC
BDA11C598DE68DC9C8839E15EFC785D9B9A5736C02560C4BE37FFBA3A69152E8
9EDD19227AC523FC969C5103C0DA0106E1ADDBE50C5CE32A67304C0AF52388BE
94F37CAB8A9D7D80715DE0FE743E4016C48ECAA4C139F20250B98998DE63DA4C
DDD3CFFC641E4A7C136F324327DA36994E66A71316C543F43FCF5E634FE1150D
222D9016A261224853BE0A1284637CAC1ECAA4C342745D6BC1ED77711DD95558
65AF69B8C8724963573C50248BE95E78A2F24958D8DE6C754A61C590F441223D
F1749A813F302726D72FECCCA1C09D5B02E359C1E6CDCFCB3FD9042387A83BF0
333901E58DAB0C198EF9179DDF4B42B16CDD248AB9968C77CFAA500BFDF0764A
E5315346E93A2FB24744B221DF4E6BB5FBD70CE54AEBE437644F64F163E26C96
155F05DEF5FBC2C7D814D7001B7F26589111EB8072CF6C51CFFE36C290EA283B
6CD2AA7C62FE9873320C0D6A02BB48665C150D9FAEABF41AF9514983294186AB
3F3C0F13B271CBFF4E388F283133093D72D7394877C88A417AE8292E49C0817D
DCD9BD16BFB7AD5AFDE008F3BC1FD8D47D2D285882C14E6823DE8B4B2B04DD65
45FC4CE8AAD1B978EA72A8527E86D17A927195803AE02D1A6A1F058F56F547DA
DAFA3B3CE6018E2545CCEC5685D06E8DB5EC18E1CDA68091AE8AA865E3B1A471
A39D899883E2DB66589C1EF402B053890FA8D2CFC4BFA18E04B1B58673002366
0DF8AB28C991CD46369A3E0766B7DB0672369DF989034AF34300E29E146E5F19
F33C9E64D2BCD2B8FC0D6A468BBC251747144AE754DFE65DE4032162F29B84A2
16D85A97BC9705409AADC4F8E3D2096B38D2FF60D9F8DAB39754F2763299E548
58ABE262B4C9E9207895B9747F936A05FB994FDF486BED398716D78874558C06
0E108AF4879CEAA37352419638B8262E55F4608265FBDCF569637C2A8E91665A
8AA2E3DFC6405AD735202F14396506559C2F09D9D58F47021D12EBCFD245F3DD
EE01AFCAB347C399E7B80649D09D3034E3F25DF67B5C3D00871BA2D34F246815
D5EDF7BF296746E5D1ABF52C29C5B8B30C32DB68BCA52D2BB7D2027846ABEEC0
A5FF47D4E7ECD967411E478E3A437CCF5766A1D1A47990223C3D52D27BB0FA82
BE3AEC4DC50F23EDB7345F1A2E3A41FB219EC6615B646BEE4DB47406A0DB7B52
BB3F37373AEDC78AC0CE99834595F4E6C78B6E627EECAA77554390761D0A9EF1
8C67FB6ED54CC9E41E65D75C2EFD533E087B18B1655A0472C15083A0ADA2EDB2
975F4B5B3056933A3730412958FF1A6343968955AC5E33EA1016C273BFD745E5
F70E8CA64A6918E6F61F58BF77AF247542814EBF900C2C0CE326690A644D5543
80DDB9AB4FFC8FD3A0D1FF763008F80AB709B89BE3E1BF8CF1286D5ECA34BEBC
DC02DB2137B1FEBCB23F1D4DEBDCA385495AB69C3EB67FC77AE26BA9B48EE55D
EE59B948902C768D077914741F259D12EBDF06B9BF3D12A818C8484C6D9E7069
775EC27793FFC22EAF7AA24ECB7ACD46EB5739BD948D07856D1A9245DF5AA29C
92DF2CC9C2A37EF010584D06A7624B8A7215599A92709E08A2038967AF1473A3
2A6981DBCE6BDB8EACEF2F8FA87F372ED46D63F7EADED0AE00A8D560F0B72C5D
40681B92C729152052996A27C379B45C7B52208B70C265897E5E616150296E3D
54C7065163A5A16B26CF8AAFA7F61139DEB21951E613BC1A88364082BFDE7412
2B6787C2FF840A2DA7884C244CE46B0B4BFB79F5DDB3BB8A01825945DAACEFAC
671D112D533964CA1F3601
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (eddy_fig5.dvi)
@start /Fa 139[28 39 33 1[50 1[50 78 28 4[50 33 44 1[44
50 44 13[55 1[72 55 72 72 89 1[72 39 1[72 72 55 61 72
66 66 72 23[33 33 40[{ TeXBase1Encoding ReEncodeFont }31
99.6264 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 1278 a
 /PSfrag where{pop(A)[[0(Bl)1 0]](B)[[1(Bl)1 0]](C)[[2(Bl)1 0]](D)[[3(Bl)1
0]](E)[[4(Bl)1 0]](F)[[5(Bl)1 0]](G)[[6(Bl)1 0]](H)[[7(Bl)1 0]](O)[[8(Bl)1
0]](K)[[9(Bl)1 0]](J)[[10(Bl)1 0]](M)[[11(Bl)1 0]](N)[[12(Bl)1 0]](P)[[13(Bl)1
0]](Q)[[14(Bl)1 0]]15 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 0 1278 a @beginspecial
27 @llx 559 @lly 570 @urx 816 @ury 2040 @rwi @clip @setspecial
%%BeginDocument: /home/raid/fluids/jds60/private/pictures/electro/eddy_schematic1.eps
%!PS-Adobe-3.0 EPSF-3.0 
%%BoundingBox:27 559 570 816
%%Pages: 0
%%Creator: LibreOffice 4.2
%%Title: none
%%CreationDate: none
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%BeginResource: procset SDRes-Prolog 1.0 0
/b4_inc_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
/bdef {bind def} bind def
/c {setrgbcolor} bdef
/l {neg lineto} bdef
/rl {neg rlineto} bdef
/lc {setlinecap} bdef
/lj {setlinejoin} bdef
/lw {setlinewidth} bdef
/ml {setmiterlimit} bdef
/ld {setdash} bdef
/m {neg moveto} bdef
/ct {6 2 roll neg 6 2 roll neg 6 2 roll neg curveto} bdef
/r {rotate} bdef
/t {neg translate} bdef
/s {scale} bdef
/sw {show} bdef
/gs {gsave} bdef
/gr {grestore} bdef
/f {findfont dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /Encoding ISOLatin1Encoding def
currentdict end /NFont exch definefont pop /NFont findfont} bdef
/p {closepath} bdef
/sf {scalefont setfont} bdef
/ef {eofill}bdef
/pc {closepath stroke}bdef
/ps {stroke}bdef
/pum {matrix currentmatrix}bdef
/pom {setmatrix}bdef
/bs {/aString exch def /nXOfs exch def /nWidth exch def currentpoint nXOfs 0 rmoveto pum nWidth aString stringwidth pop div 1 scale aString show pom moveto} bdef
%%EndResource
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%EndPageSetup
pum
0.02833 0.02835 s 
0 -29700 t
/tm matrix currentmatrix def
gs
tm setmatrix
-1105 -1072 t 
1 1 s 
1105 1072 m 22104 1072 l 22104 30771 l 1105 30771 l 1105 1072 l eoclip newpath
gs
0 0 m 20999 0 l 20999 29699 l 0 29699 l 0 0 l eoclip newpath
326.58214 lw 1 lj 0.003 0.003 0.003 c 2210 4288 m  6742 4288 l  ps
6631 8577 m  6631 4288 l  ps
2210 8577 m  6742 8577 l  ps
108.86071 lw 6640 4241 m  6658 4240 6672 4240 6690 4240 ct 7106 4240 7460 4332 7820 4534 ct 
8182 4736 8440 4987 8649 5337 ct 8857 5688 8952 6031 8952 6435 ct 8952 6839 8857 7182 8649 7533 ct 
8440 7882 8182 8133 7821 8336 ct 7460 8537 7106 8630 6690 8630 ct 6680 8630 6672 8630 6662 8630 ct 
ps
326.58214 lw 17684 8577 m  17684 4288 l  ps
21994 4310 m  17573 4310 l  ps
22105 8577 m  17684 8577 l  ps
108.86071 lw 17677 8575 m  17273 8574 16930 8484 16580 8288 ct 16227 8090 15975 7846 15772 7504 ct 
15568 7162 15475 6827 15475 6433 ct 15475 6038 15568 5704 15772 5362 ct 15975 5020 16227 4775 16580 4578 ct 
16922 4386 17257 4296 17652 4290 ct ps
6631 6433 m  17684 6433 l  ps
/Times f
832 sf 12489 6074 m  (O) sw
/Times f
832 sf 6189 3930 m  (A) sw
/Times f
832 sf 5747 6717 m  (B) sw
/Times f
832 sf 6428 9827 m  (C) sw
/Times f
832 sf 9217 7564 m  (D) sw
/Times f
832 sf 17379 9816 m  (E) sw
/Times f
832 sf 18126 6825 m  (F) sw
/Times f
832 sf 17554 3888 m  (G) sw
/Times f
832 sf 14479 7588 m  (H) sw
12157 2144 m  12157 10829 l  ps
/Times f
832 sf 2198 9880 m  (N) sw
/Times f
832 sf 2156 3973 m  (M) sw
/Times f
832 sf 21265 9655 m  (Q) sw
/Times f
832 sf 21387 3876 m  (P) sw
gr
gs
0 0 m 20999 0 l 20999 29699 l 0 29699 l 0 0 l eoclip newpath
gr
gr
0 29700 t 
pom
count op_count sub {pop} repeat countdictstack dict_count sub {end} repeat b4_inc_state restore
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 1278 a
 /End PSfrag
 0 1278 a 0 -637 a
 /Hide PSfrag
 0 -637 a -822
-569 a Fa(PSfrag)26 b(replacements)p -822 -532 822 4
v 0 -528 a
 /Unhide PSfrag
 0 -528 a -72 -407 a
  {
 -72 -407 a Fa(A)-72 -407
y
  } 0/Place PSfrag
 -72 -407 a -25 -287 a
  {
 -25 -287 a -42 w Fa(B)-25 -287
y
  } 1/Place PSfrag
 -25 -287 a -66 -167 a
  {
 -66 -167 a Fa(C)-66 -167 y
  } 2/Place PSfrag
 -66
-167 a -72 -46 a
  {
 -72 -46 a Fa(D)-72 -46 y
  } 3/Place PSfrag
 -72 -46 a -61
74 a
  {
 -61 74 a Fa(E)-61 74 y
  } 4/Place PSfrag
 -61 74 a -55 195 a
  {
 -55 195
a Fa(F)-55 195 y
  } 5/Place PSfrag
 -55 195 a -72 314 a
  {
 -72 314 a Fa(G)-72
314 y
  } 6/Place PSfrag
 -72 314 a -47 436 a
  {
 -47 436 a -25 w Fa(H)-47 436
y
  } 7/Place PSfrag
 -47 436 a -72 555 a
  {
 -72 555 a Fa(O)-72 555 y
  } 8/Place PSfrag
 -72 555
a -72 676 a
  {
 -72 676 a Fa(K)-72 676 y
  } 9/Place PSfrag
 -72 676 a -39 796
a
  {
 -39 796 a Fa(J)-39 796 y
  } 10/Place PSfrag
 -39 796 a -89 917 a
  {
 -89 917
a Fa(M)-89 917 y
  } 11/Place PSfrag
 -89 917 a -72 1036 a
  {
 -72 1036 a Fa(N)-72
1036 y
  } 12/Place PSfrag
 -72 1036 a -55 1158 a
  {
 -55 1158 a Fa(P)-55 1158
y
  } 13/Place PSfrag
 -55 1158 a -72 1260 a
  {
 -72 1260 a Fa(Q)-72 1260 y
  } 14/Place PSfrag
 -72
1260 a 2315 1278 a
 /PSfrag where{pop(A)[[0(Bl)1 0]](B)[[1(Bl)1 0]](C)[[2(Bl)1 0]](D)[[3(Bl)1
0]](E)[[4(Bl)1 0]](F)[[5(Bl)1 0]](G)[[6(Bl)1 0]](H)[[7(Bl)1 0]](O)[[8(Bl)1
0]](K)[[9(Bl)1 0]](J)[[10(Bl)1 0]](M)[[11(Bl)1 0]](N)[[12(Bl)1 0]](P)[[13(Bl)1
0]](Q)[[14(Bl)1 0]]15 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2315 1278 a @beginspecial 27 @llx
559 @lly 570 @urx 816 @ury 2040 @rwi @clip @setspecial
%%BeginDocument: /home/raid/fluids/jds60/private/pictures/electro/eddy_schematic2.eps
%!PS-Adobe-3.0 EPSF-3.0 
%%BoundingBox: 27 559 570 816
%%Pages: 0
%%Creator: LibreOffice 4.2
%%Title: none
%%CreationDate: none
%%LanguageLevel: 2
%%EndComments
%%BeginProlog
%%BeginResource: procset SDRes-Prolog 1.0 0
/b4_inc_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
/bdef {bind def} bind def
/c {setrgbcolor} bdef
/l {neg lineto} bdef
/rl {neg rlineto} bdef
/lc {setlinecap} bdef
/lj {setlinejoin} bdef
/lw {setlinewidth} bdef
/ml {setmiterlimit} bdef
/ld {setdash} bdef
/m {neg moveto} bdef
/ct {6 2 roll neg 6 2 roll neg 6 2 roll neg curveto} bdef
/r {rotate} bdef
/t {neg translate} bdef
/s {scale} bdef
/sw {show} bdef
/gs {gsave} bdef
/gr {grestore} bdef
/f {findfont dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /Encoding ISOLatin1Encoding def
currentdict end /NFont exch definefont pop /NFont findfont} bdef
/p {closepath} bdef
/sf {scalefont setfont} bdef
/ef {eofill}bdef
/pc {closepath stroke}bdef
/ps {stroke}bdef
/pum {matrix currentmatrix}bdef
/pom {setmatrix}bdef
/bs {/aString exch def /nXOfs exch def /nWidth exch def currentpoint nXOfs 0 rmoveto pum nWidth aString stringwidth pop div 1 scale aString show pom moveto} bdef
%%EndResource
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%EndPageSetup
pum
0.02833 0.02835 s 
0 -29700 t
/tm matrix currentmatrix def
gs
tm setmatrix
-1105 -1072 t 
1 1 s 
1105 1072 m 22104 1072 l 22104 30771 l 1105 30771 l 1105 1072 l eoclip newpath
gs
0 0 m 20999 0 l 20999 29699 l 0 29699 l 0 0 l eoclip newpath
326.58214 lw 1 lj 0.003 0.003 0.003 c 2210 4288 m  6742 4288 l  ps
6631 8577 m  6631 4288 l  ps
2210 8577 m  6742 8577 l  ps
17684 8577 m  17684 4288 l  ps
21994 4310 m  17573 4310 l  ps
22105 8577 m  17684 8577 l  ps
108.86071 lw 6631 6433 m  17684 6433 l  ps
/Times f
832 sf 12489 6074 m  (O) sw
/Times f
832 sf 6189 3930 m  (A) sw
/Times f
832 sf 5747 6717 m  (B) sw
/Times f
832 sf 6428 9827 m  (C) sw
/Times f
832 sf 17379 9816 m  (E) sw
/Times f
832 sf 18126 6825 m  (F) sw
/Times f
832 sf 17554 3888 m  (G) sw
12157 2144 m  12157 10829 l  ps
6631 4288 m  17684 4288 l  ps
6631 8577 m  17794 8577 l  ps
/Times f
832 sf 12489 9827 m  (J) sw
/Times f
832 sf 12612 3997 m  (K) sw
/Times f
832 sf 2134 3984 m  (M) sw
/Times f
832 sf 2211 9816 m  (N) sw
/Times f
832 sf 21515 3919 m  (P) sw
/Times f
832 sf 21375 9816 m  (Q) sw
gr
gs
0 0 m 20999 0 l 20999 29699 l 0 29699 l 0 0 l eoclip newpath
gr
gr
0 29700 t 
pom
count op_count sub {pop} repeat countdictstack dict_count sub {end} repeat b4_inc_state restore
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2315 1278 a
 /End PSfrag
 2315 1278 a 2315 -637 a
 /Hide PSfrag
 2315
-637 a 1493 -569 a Fa(PSfrag)g(replacements)p 1493 -532
822 4 v 2315 -528 a
 /Unhide PSfrag
 2315 -528 a 2243 -407 a
  {
 2243 -407
a Fa(A)2243 -407 y
  } 0/Place PSfrag
 2243 -407 a 2290 -287 a
  {
 2290 -287
a -42 w Fa(B)2290 -287 y
  } 1/Place PSfrag
 2290 -287 a 2249 -167 a
  {
 2249
-167 a Fa(C)2249 -167 y
  } 2/Place PSfrag
 2249 -167 a 2243 -46 a
  {
 2243 -46
a Fa(D)2243 -46 y
  } 3/Place PSfrag
 2243 -46 a 2254 74 a
  {
 2254 74 a Fa(E)2254
74 y
  } 4/Place PSfrag
 2254 74 a 2260 195 a
  {
 2260 195 a Fa(F)2260 195 y
  } 5/Place PSfrag

2260 195 a 2243 314 a
  {
 2243 314 a Fa(G)2243 314 y
  } 6/Place PSfrag
 2243
314 a 2268 436 a
  {
 2268 436 a -25 w Fa(H)2268 436 y
  } 7/Place PSfrag
 2268
436 a 2243 555 a
  {
 2243 555 a Fa(O)2243 555 y
  } 8/Place PSfrag
 2243 555
a 2243 676 a
  {
 2243 676 a Fa(K)2243 676 y
  } 9/Place PSfrag
 2243 676 a 2276
796 a
  {
 2276 796 a Fa(J)2276 796 y
  } 10/Place PSfrag
 2276 796 a 2226 917
a
  {
 2226 917 a Fa(M)2226 917 y
  } 11/Place PSfrag
 2226 917 a 2243 1036 a
  {
 2243
1036 a Fa(N)2243 1036 y
  } 12/Place PSfrag
 2243 1036 a 2260 1158 a
  {
 2260
1158 a Fa(P)2260 1158 y
  } 13/Place PSfrag
 2260 1158 a 2243 1260 a
  {
 2243
1260 a Fa(Q)2243 1260 y
  } 14/Place PSfrag
 2243 1260 a 857 1440 a Fa(\(a\))2159
b(\(b\))p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
